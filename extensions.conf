
[general]
static=yes
writeprotect=yes
priorityjumping=no
autofallthrough=no

[globals]

[public]
; === Point-to-Point Call ===
exten => _X.,1,NoOp(Calling from ${CALLERID(num)} to ${EXTEN})
 same => n,Set(RID=${UNIQUEID})
 same => n,Set(CR=${CALLERID(num)})
 same => n,Set(CD=${EXTEN})
 same => n,Set(ST=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)})
 same => n,Set(TT=${STRFTIME(${EPOCH},,%H%M%S)})
 same => n,Set(DF=${STRFTIME(${EPOCH},,%Y-%m-%d)})
 same => n,Set(MD=/var/spool/asterisk/monitor/${DF})
 same => n,System(mkdir -p ${MD})
 same => n,Set(IS_CONF=0)
 same => n,Set(IS_P2P=1)

 same => n,Set(RF=call-${TT}-${RID}.wav)
 same => n,MixMonitor(${MD}/${RF},b)
 same => n,Dial(PJSIP/${EXTEN},30,rg)
 same => n,Hangup()

; === Conference Call ===
exten => _6XXX,1,NoOp(Joining Conference Room ${EXTEN})
 same => n,Set(RID=${UNIQUEID})
 same => n,Set(CR=${CALLERID(num)})
 same => n,Set(CH=${EXTEN})
 same => n,Set(JOIN_TIME=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)})
 same => n,Set(TT=${STRFTIME(${EPOCH},,%H%M%S)})
 same => n,Set(DF=${STRFTIME(${EPOCH},,%Y-%m-%d)})
 same => n,Set(MD=/var/spool/asterisk/monitor/${DF})
 same => n,System(mkdir -p ${MD})
 same => n,Set(IS_CONF=1)
 same => n,Set(IS_P2P=0)

 ; Determine shared timestamp (TT) for all participants
 same => n,Set(SLF_FILE=${MD}/conf-${DF}-${CH}_activity.timestamp)
 
; Cek apakah timestamp file sudah ada
same => n,TrySystem(test -e ${SLF_FILE})
same => n,Set(FILE_EXISTS=${IF($["${SYSTEMSTATUS}"="SUCCESS"]?1:0)})

; Fix untuk ambil TT secara aman tanpa newline
same => n,ExecIf($["${FILE_EXISTS}"="1"]?Set(TT=${SHELL(head -n 1 ${SLF_FILE} | tr -d '\n')}))
same => n,ExecIf($["${FILE_EXISTS}"="0"]?Set(TT=${STRFTIME(${EPOCH},,%H%M%S)}))
same => n,ExecIf($["${FILE_EXISTS}"="0"]?System(echo ${TT} > ${SLF_FILE}))

 ; Generate filenames using shared TT
 same => n,Set(RF=conf-${TT}-${CR}-${RID}.wav)
 same => n,Set(SLF=conf-${DF}-${CH}_${TT}_activity.log)
 same => n,MixMonitor(${MD}/${RF},b)
 same => n,Set(SPEECHLOG=${MD}/${SLF})

 same => n,Gosub(td-handler,conf-join,1(${SPEECHLOG}))
 same => n,ConfBridge(${CH},default_bridge,default_user)

; === Hangup Handler ===
exten => h,1,NoOp(Call ended - Determine Call Type)
 same => n,GotoIf($["${IS_CONF}" = "1"]?conf:p2p)

 same => n(p2p),NoOp(Call ended - Point-to-Point)
 same => n,Set(MYSTATUS=${DIALSTATUS})
 same => n,System(/usr/local/bin/split_recording.sh ${MD}/${RF} 15 &)
 same => n,Set(UPLOAD_CMD=/usr/local/bin/write_call_history.sh ${RID} ${CR} "${CD}" "${ST}" "${RF}" "${MYSTATUS}")
 same => n,System(${UPLOAD_CMD} &)
 same => n,Hangup()

 same => n(conf),NoOp(Call ended - Conference)
 same => n,Set(LEAVE_TIME=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)})
 same => n,Gosub(td-handler,conf-leave,1(${SPEECHLOG}))
 same => n,System(/usr/local/bin/split_recording.sh ${MD}/${RF} 15 &)
 same => n,System(/usr/local/bin/write_channel_history.sh ${RID} ${CR} "${CH}" "${JOIN_TIME}" "${LEAVE_TIME}" "${RF}" "${SLF}" &)

 same => n,Set(PARTICIPANTS=${CONFBRIDGE_INFO(parties,${CH})})
 same => n,NoOp(Participants left: ${PARTICIPANTS})
 same => n,GotoIf($[${PARTICIPANTS} = 0]?final_upload:no_upload)

 same => n(no_upload),Hangup()

 same => n(final_upload),NoOp(Last participant - finalizing session)
 same => n,System(/usr/local/bin/write_conference_session.sh "${CH}" "${JOIN_TIME}" "${LEAVE_TIME}" "${SLF}" &)

 ; Tambahan: hapus SLF_FILE (timestamp file)
 same => n,Set(DF=${STRFTIME(${EPOCH},,%Y-%m-%d)})
 same => n,Set(MD=/var/spool/asterisk/monitor/${DF})
 same => n,Set(SLF_FILE=${MD}/conf-${DF}-${CH}_activity.timestamp)
 same => n,System(rm -f ${SLF_FILE} &)

 same => n,Hangup()

[td-handler]
exten => conf,1,NoOp(Speech detected - Conference)
 same => n,Set(LOGFILE=${ARG1})
 same => n,System(echo "$(date +%T) | ${CALLERID(num)} speaking" >> ${LOGFILE})
 same => n,Return()

exten => conf-join,1,NoOp(User joined the conference - ${CALLERID(num)})
 same => n,Set(LOGFILE=${ARG1})
 same => n,System(echo "$(date +%T) | User ${CALLERID(num)} joined the conference" >> ${LOGFILE})
 same => n,Return()

exten => conf-leave,1,NoOp(User left the conference - ${CALLERID(num)})
 same => n,Set(LOGFILE=${ARG1})
 same => n,System(echo "$(date +%T) | User ${CALLERID(num)} left the conference" >> ${LOGFILE})
 same => n,Return()

[testing-odbc]
exten => 8888,1,NoOp(TESTING SHELL INSERT)
 same => n,Set(CID=12345)
 same => n,Set(CH=6010)
 same => n,Set(ST=2025-05-01\ 15:00:00)
 same => n,Set(END=2025-05-01\ 15:10:00)
 same => n,Set(RF=TESTING)
 same => n,Set(LSF=TESTING)
 same => n,System(/usr/local/bin/write_channel_call_history.sh ${CID} ${CH} "${ST}" "${END}" "${RF}" "${LSF}")
 same => n,Hangup()

[testing-odbc2]
exten => 9999,1,NoOp(TESTING SHELL INSERT)
 same => n,Set(CALLID=CALLTEST001)
 same => n,Set(CALLERID=USR1001)
 same => n,Set(CHANNEL=conf-9001)
 same => n,Set(JOIN=2025-05-11\ 14:00:00)
 same => n,Set(LEAVE=2025-05-11\ 14:15:00)
 same => n,Set(RECFILE=test-recording.wav)
 same => n,Set(LOGFILE=test-transcript.txt)
 same => n,System(/usr/local/bin/write_channel_history.sh ${CALLID} ${CALLERID} "${CHANNEL}" "${JOIN}" "${LEAVE}" ${RECFILE} ${LOGFILE})
 same => n,Hangup()

